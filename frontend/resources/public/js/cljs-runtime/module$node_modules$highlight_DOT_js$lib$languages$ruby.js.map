{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$ruby.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/ruby.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ruby\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  var RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  var RUBY_KEYWORDS = {\n    keyword:\n      'and then defined module in return redo if BEGIN retry end for self when ' +\n      'next until do begin unless END rescue else break undef not super class case ' +\n      'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor ' +\n      '__FILE__',\n    built_in: 'proc lambda',\n    literal:\n      'true false nil'\n  };\n  var YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  var IRB_OBJECT = {\n    begin: '#<', end: '>'\n  };\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [YARDOCTAG]\n      }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [YARDOCTAG],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: /%[qQwWx]?\\(/, end: /\\)/},\n      {begin: /%[qQwWx]?\\[/, end: /\\]/},\n      {begin: /%[qQwWx]?\\{/, end: /\\}/},\n      {begin: /%[qQwWx]?</, end: />/},\n      {begin: /%[qQwWx]?\\//, end: /\\//},\n      {begin: /%[qQwWx]?%/, end: /%/},\n      {begin: /%[qQwWx]?-/, end: /-/},\n      {begin: /%[qQwWx]?\\|/, end: /\\|/},\n      {\n        // \\B in the beginning suppresses recognition of ?-sequences where ?\n        // is the last character of a preceding identifier, as in: `func?4`\n        begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n      },\n      { // heredocs\n        begin: /<<[-~]?'?(\\w+)\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/,\n        returnBegin: true,\n        contains: [\n          { begin: /<<[-~]?'?/ },\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/, end: /(\\w+)/,\n            contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  var decimal = '[1-9](_?[0-9])*|0';\n  var digits = '[0-9](_?[0-9])*';\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" },\n    ]\n  };\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)', endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n\n  var RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    {\n      className: 'class',\n      beginKeywords: 'class module', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?'}),\n        {\n          begin: '<\\\\s*',\n          contains: [{\n            begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n          }]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      // def method_name(\n      // def method_name;\n      // def method_name (end of line)\n      begin: concat(/def\\s*/, lookahead(RUBY_METHOD_RE + \"\\\\s*(\\\\(|;|$)\")),\n      keywords: \"def\",\n      end: '$|;',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: RUBY_METHOD_RE}),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::'\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: RUBY_METHOD_RE}],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attemps to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      relevance:0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          illegal: /\\n/,\n          variants: [\n            {begin: '/', end: '/[a-z]*'},\n            {begin: /%r\\{/, end: /\\}[a-z]*/},\n            {begin: '%r\\\\(', end: '\\\\)[a-z]*'},\n            {begin: '%r!', end: '![a-z]*'},\n            {begin: '%r\\\\[', end: '\\\\][a-z]*'}\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  var SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  var IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta',\n      begin: '^('+SIMPLE_PROMPT+\"|\"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')(?=[ ])',\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n        hljs.SHEBANG({binary:\"ruby\"}),\n      ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","joined","join","ruby","hljs","RUBY_KEYWORDS","keyword","built_in","literal","YARDOCTAG","className","begin","IRB_OBJECT","end","COMMENT_MODES","COMMENT","contains","relevance","SUBST","keywords","STRING","BACKSLASH_ESCAPE","variants","returnBegin","END_SAME_AS_BEGIN","PARAMS","endsParent","RUBY_DEFAULT_CONTAINS","beginKeywords","illegal","inherit","TITLE_MODE","IDENT_RE","re","RUBY_METHOD_RE","UNDERSCORE_IDENT_RE","NUMBER","RE_STARTERS_RE","IRB_DEFAULT","starts","unshift","name","aliases","SHEBANG","binary"]
}
