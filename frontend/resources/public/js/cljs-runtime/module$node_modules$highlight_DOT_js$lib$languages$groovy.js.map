{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$groovy.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/groovy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$groovy\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance : 0,\n        contains : [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/, relevance: 0\n          }, {\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [\n      hljs.BACKSLASH_ESCAPE\n    ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE,\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    }, {\n      begin: /'''/,\n      end: /'''/\n    }, {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    ],\n    { className: \"string\" }\n  );\n\n    return {\n        name: 'Groovy',\n        keywords: {\n            built_in: 'this super',\n            literal: 'true false null',\n            keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n        },\n        contains: [\n            hljs.SHEBANG({\n              binary: \"groovy\",\n              relevance: 10\n            }),\n            COMMENT,\n            STRING,\n            REGEXP,\n            NUMBER,\n            {\n                className: 'class',\n                beginKeywords: 'class interface trait enum', end: /\\{/,\n                illegal: ':',\n                contains: [\n                    {beginKeywords: 'extends implements'},\n                    hljs.UNDERSCORE_TITLE_MODE\n                ]\n            },\n            {\n                className: 'meta',\n                begin: '@[A-Za-z]+',\n                relevance: 0\n            },\n            {\n              // highlight map keys and named parameters as attrs\n              className: 'attr', begin: IDENT_RE + '[ \\t]*:'\n            },\n            {\n              // catch middle element of the ternary operator\n              // to avoid highlight it as a label, named parameter, or map key\n              begin: /\\?/,\n              end: /:/,\n              relevance: 0,\n              contains: [\n                COMMENT,\n                STRING,\n                REGEXP,\n                NUMBER,\n                'self'\n              ]\n            },\n            {\n                // highlight labeled statements\n                className: 'symbol',\n                begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n                excludeBegin: true,\n                end: IDENT_RE + ':',\n                relevance: 0\n            }\n        ],\n        illegal: /#|<\\//\n    };\n}\n\nmodule.exports = groovy;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","joined","join","variants","obj","groovy","hljs","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","relevance","contains","begin","className","REGEXP","BACKSLASH_ESCAPE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","STRING","end","APOS_STRING_MODE","QUOTE_STRING_MODE","name","keywords","built_in","literal","keyword","SHEBANG","binary","beginKeywords","illegal","UNDERSCORE_TITLE_MODE","re","excludeBegin"]
}
