{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$swift.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,CAAe,wDAAf,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsKrHD,MAAA,CAAOC,OAAP,CA3JAC,QAAc,CAACC,IAAD,CAAO,CACnB,IAAIC,eAAiB,CAGjBC,SAAU,QAHO,CAIjBC,QAAS,ovBAJQ;AAcjBC,QAAS,gBAdQ,CAejBC,SAAU,wlCAfO,CAArB;AA0CIC,cAAgBN,IAAA,CAAKO,OAAL,CAClB,MADkB,CAElB,MAFkB,CAGlB,CACEC,SAAU,CAAC,MAAD,CADZ,CAHkB,CA1CpB,CAiDIC,MAAQ,CACVC,UAAW,OADD,CAEVC,MAAO,MAFG,CAEKC,IAAK,KAFV,CAGVC,SAAUZ,cAHA,CAIVO,SAAU,EAJA,CAjDZ,CAuDIM,OAAS,CACXJ,UAAW,QADA,CAEXF,SAAU,CAACR,IAAD,CAAMe,gBAAN,CAAwBN,KAAxB,CAFC,CAGXO,SAAU,CACR,CAACL,MAAO,KAAR,CAAeC,IAAK,KAApB,CADQ,CAER,CAACD,MAAO,GAAR,CAAaC,IAAK,GAAlB,CAFQ,CAHC,CAvDb,CAoEIK,OAAS,CACTP,UAAW,QADF,CAETQ,UAAW,CAFF,CAGTF,SAAU,CAER,CAAEL,MAAO,8DAAT,CAFQ,CAMR,CAAEA,MAAO,4EAAT,CANQ,CAUR,CAAEA,MAAO,kBAAT,CAVQ;AAaR,CAAEA,MAAO,iBAAT,CAbQ,CAHD,CAmBbF,MAAA,CAAMD,QAAN,CAAiB,CAACS,MAAD,CAEjB,OAAO,CACLE,KAAM,OADD,CAELN,SAAUZ,cAFL,CAGLO,SAAU,CACRM,MADQ,CAERd,IAFQ,CAEHoB,mBAFG,CAGRd,aAHQ,CAtDce,CACxBX,UAAW,MADaW,CAExBV,MAAO,wBAFiBU,CAsDd,CA5DDC,CACTZ,UAAW,MADFY,CAETX,MAAO,oBAFEW,CAGTJ,UAAW,CAHFI,CA4DC,CAMRL,MANQ,CAOR,CACEP,UAAW,UADb,CAEEa,cAAe,MAFjB,CAEyBX,IAAK,IAF9B,CAEoCY,WAAY,CAAA,CAFhD,CAGEhB,SAAU,CACRR,IAAA,CAAKyB,OAAL,CAAazB,IAAb,CAAkB0B,UAAlB,CAA8B,CAC5Bf,MAAO,0BADqB,CAA9B,CADQ,CAIR,CACEA,MAAO,GADT,CACcC,IAAK,GADnB,CAJQ,CAOR,CACEF,UAAW,QADb,CAEEC,MAAO,IAFT,CAEeC,IAAK,IAFpB,CAE0Be,WAAY,CAAA,CAFtC,CAGEd,SAAUZ,cAHZ;AAIEO,SAAU,CACR,MADQ,CAERS,MAFQ,CAGRH,MAHQ,CAIRd,IAJQ,CAIH4B,oBAJG,CAKR,CAACjB,MAAO,GAAR,CALQ,CAJZ,CAWEkB,QAAS,MAXX,CAPQ,CAHZ,CAwBEA,QAAS,MAxBX,CAPQ,CAiCR,CACEnB,UAAW,OADb,CAEEa,cAAe,sCAFjB,CAGEV,SAAUZ,cAHZ,CAIEW,IAAK,KAJP,CAKEY,WAAY,CAAA,CALd,CAMEhB,SAAU,CACRR,IAAA,CAAKyB,OAAL,CAAazB,IAAb,CAAkB0B,UAAlB,CAA8B,CAACf,MAAO,uCAAR,CAA9B,CADQ,CANZ,CAjCQ,CA2CR,CACED,UAAW,MADb,CAEEC,MAAO,sVAFT,CA3CQ;AAqDR,CACEY,cAAe,QADjB,CAC2BX,IAAK,GADhC,CAEEJ,SAAU,CAACR,IAAD,CAAMoB,mBAAN,CAA2Bd,aAA3B,CAFZ,CAGEY,UAAW,CAHb,CArDQ,CAHL,CA1FY,CAXgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/swift.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$swift\"] = function(global,require,module,exports) {\n/*\nLanguage: Swift\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\nAuthor: Chris Eidhof <chris@eidhof.nl>\nContributors: Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>\nWebsite: https://swift.org\nCategory: common, system\n*/\n\n\nfunction swift(hljs) {\n  var SWIFT_KEYWORDS = {\n      // override the pattern since the default of of /\\w+/ is not sufficient to\n      // capture the keywords that start with the character \"#\"\n      $pattern: /[\\w#]+/,\n      keyword: '#available #colorLiteral #column #else #elseif #endif #file ' +\n        '#fileLiteral #function #if #imageLiteral #line #selector #sourceLocation ' +\n        '_ __COLUMN__ __FILE__ __FUNCTION__ __LINE__ Any as as! as? associatedtype ' +\n        'associativity break case catch class continue convenience default defer deinit didSet do ' +\n        'dynamic dynamicType else enum extension fallthrough false fileprivate final for func ' +\n        'get guard if import in indirect infix init inout internal is lazy left let ' +\n        'mutating nil none nonmutating open operator optional override postfix precedence ' +\n        'prefix private protocol Protocol public repeat required rethrows return ' +\n        'right self Self set some static struct subscript super switch throw throws true ' +\n        'try try! try? Type typealias unowned var weak where while willSet',\n      literal: 'true false nil',\n      built_in: 'abs advance alignof alignofValue anyGenerator assert assertionFailure ' +\n        'bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC ' +\n        'bridgeToObjectiveCUnconditional c compactMap contains count countElements countLeadingZeros ' +\n        'debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords ' +\n        'enumerate equal fatalError filter find getBridgedObjectiveCType getVaList ' +\n        'indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC ' +\n        'isUniquelyReferenced isUniquelyReferencedNonObjC join lazy lexicographicalCompare ' +\n        'map max maxElement min minElement numericCast overlaps partition posix ' +\n        'precondition preconditionFailure print println quickSort readLine reduce reflect ' +\n        'reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split ' +\n        'startsWith stride strideof strideofValue swap toString transcode ' +\n        'underestimateCount unsafeAddressOf unsafeBitCast unsafeDowncast unsafeUnwrap ' +\n        'unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer ' +\n        'withUnsafePointerToObject withUnsafeMutablePointer withUnsafeMutablePointers ' +\n        'withUnsafePointer withUnsafePointers withVaList zip'\n    };\n\n  var TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\u00C0-\\u02B8\\']*',\n    relevance: 0\n  };\n  // slightly more special to swift\n  var OPTIONAL_USING_TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\u00C0-\\u02B8\\']*[!?]'\n  };\n  var BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    {\n      contains: ['self']\n    }\n  );\n  var SUBST = {\n    className: 'subst',\n    begin: /\\\\\\(/, end: '\\\\)',\n    keywords: SWIFT_KEYWORDS,\n    contains: [] // assigned later\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /\"\"\"/, end: /\"\"\"/},\n      {begin: /\"/, end: /\"/},\n    ]\n  };\n\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\n  var decimalDigits = '([0-9]_*)+';\n  var hexDigits = '([0-9a-fA-F]_*)+';\n  var NUMBER = {\n      className: 'number',\n      relevance: 0,\n      variants: [\n        // decimal floating-point-literal (subsumes decimal-literal)\n        { begin: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` +\n          `([eE][+-]?(${decimalDigits}))?\\\\b` },\n\n        // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n        { begin: `\\\\b0x(${hexDigits})(\\\\.(${hexDigits}))?` +\n          `([pP][+-]?(${decimalDigits}))?\\\\b` },\n\n        // octal-literal\n        { begin: /\\b0o([0-7]_*)+\\b/ },\n\n        // binary-literal\n        { begin: /\\b0b([01]_*)+\\b/ },\n      ]\n  };\n  SUBST.contains = [NUMBER];\n\n  return {\n    name: 'Swift',\n    keywords: SWIFT_KEYWORDS,\n    contains: [\n      STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      BLOCK_COMMENT,\n      OPTIONAL_USING_TYPE,\n      TYPE,\n      NUMBER,\n      {\n        className: 'function',\n        beginKeywords: 'func', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/\n          }),\n          {\n            begin: /</, end: />/\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/, endsParent: true,\n            keywords: SWIFT_KEYWORDS,\n            contains: [\n              'self',\n              NUMBER,\n              STRING,\n              hljs.C_BLOCK_COMMENT_MODE,\n              {begin: ':'} // relevance booster\n            ],\n            illegal: /[\"']/\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct protocol class extension enum',\n        keywords: SWIFT_KEYWORDS,\n        end: '\\\\{',\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/})\n        ]\n      },\n      {\n        className: 'meta', // @attributes\n        begin: '(@discardableResult|@warn_unused_result|@exported|@lazy|@noescape|' +\n                  '@NSCopying|@NSManaged|@objc|@objcMembers|@convention|@required|' +\n                  '@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|' +\n                  '@infix|@prefix|@postfix|@autoclosure|@testable|@available|' +\n                  '@nonobjc|@NSApplicationMain|@UIApplicationMain|@dynamicMemberLookup|' +\n                  '@propertyWrapper|@main)\\\\b'\n\n      },\n      {\n        beginKeywords: 'import', end: /$/,\n        contains: [hljs.C_LINE_COMMENT_MODE, BLOCK_COMMENT],\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = swift;\n\n};"],
"names":["shadow$provide","global","require","module","exports","swift","hljs","SWIFT_KEYWORDS","$pattern","keyword","literal","built_in","BLOCK_COMMENT","COMMENT","contains","SUBST","className","begin","end","keywords","STRING","BACKSLASH_ESCAPE","variants","NUMBER","relevance","name","C_LINE_COMMENT_MODE","OPTIONAL_USING_TYPE","TYPE","beginKeywords","excludeEnd","inherit","TITLE_MODE","endsParent","C_BLOCK_COMMENT_MODE","illegal"]
}
